import{C as qs,S as co,i as uo,n as ro,e as s,t as o,j as r,c as e,a as n,g as l,d as t,m as i,b as p,K as C,f as io,F as a,L as ko,s as ts,J as wn,M as ns,N as vo,O as fo}from"../chunks/vendor-7ffe92ef.js";const _n=k=>{const{subscribe:c,set:f}=qs({value:k});return{subscribe:c,update:b=>{if(b){const m=b(k);m!==void 0&&m!==k&&(k=m)}f({value:k})},set:b=>{k=b,f({value:k})}}},ho=k=>{let c=!1;const f={value:k},b={value:k},{subscribe:m,set:R}=qs(f);return{subscribe:m,update:H=>{if(H){const _=H(k);_!==void 0&&_!==k&&(k=f.value=b.value=_)}R((c=!c)?b:f)},set:H=>{k=f.value=b.value=H,R((c=!c)?b:f)}}},bo='<span class="token keyword">const</span> writableMap <span class="token operator">=</span> <span class="token function">writable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',mo=`$writableMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,Eo=`$writableMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $writableMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$writableMap <span class="token operator">=</span> $writableMap<span class="token punctuation">;</span>`,wo='<span class="token keyword">const</span> writableMapCloned <span class="token operator">=</span> <span class="token function">writable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',_o=`$writableMapCloned<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,jo=`$writableMapCloned<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $writableMapCloned<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$writableMapCloned <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>$writableMapCloned<span class="token punctuation">)</span><span class="token punctuation">;</span>`,Mo='<span class="token keyword">const</span> derivedWritableMap <span class="token operator">=</span> <span class="token function">derived</span><span class="token punctuation">(</span>writableMap<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">$v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> $v<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',go=`$derivedWritableMap<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,Do='<span class="token keyword">const</span> mutableMap <span class="token operator">=</span> <span class="token function">mutable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',Co=`$mutableMap<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,Po=`mutableMap<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">$v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
	$v<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>`,Ro='<span class="token keyword">const</span> fastMutableMap <span class="token operator">=</span> <span class="token function">fastMutable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',Ho=`$fastMutableMap<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,Oo=`fastMutableMap<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">$v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
	$v<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>`,yo='<span class="token keyword">const</span> mutableMapManual <span class="token operator">=</span> <span class="token function">mutable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',To=`$mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>`,Ao=`$mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mutableMapManual<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>`,Wo=`$mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> $mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$mutableMapManual <span class="token operator">=</span> $mutableMapManual<span class="token punctuation">.</span>value<span class="token punctuation">;</span>`,Lo='$mutableMapManual <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token comment">/*...*/</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',Fo='mutableMapManual<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token comment">/*...*/</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>';var E={ADef:bo,ARead:mo,AWrite:Eo,BDef:wo,BRead:_o,BWrite:jo,CDef:Mo,CRead:go,DDef:Do,DRead:Co,DWrite:Po,EDef:Ro,ERead:Ho,EWrite:Oo,FDef:yo,FRead:To,F1Write:Ao,F2Write:Wo,F3Write:Lo,F4Write:Fo};function So(k){let c,f,b,m,R,H,_,la,P,S,sa,A,ea,ta,O,bs,ms,d,Is,pa,Gs,Ks,Us,j,ca,jn=E.ADef+"",Qs,N,ua,os=k[0].get("a")+"",Es,Js,ra,Mn=E.ARead+"",zs,$,Vs,ia,Xs,Ys,B,Zs,St="{",xs,ae,se,ka,gn=E.AWrite+"",ee,q,te,da,ne,oe,le,M,va,Dn=E.BDef+"",pe,I,fa,ls=k[1].get("a")+"",ws,ce,ha,Cn=E.BRead+"",ue,ps,re,ie,ba,Pn=E.BWrite+"",ke,de,ve,G,fe,ma,he,be,me,Ee,we,T,_e,Ea,je,Me,wa,ge,De,Ce,y,_a,Rn=E.CDef+"",Pe,K,ja,cs=k[3].value.get("a")+"",_s,Re,Ma,Hn=E.CRead+"",He,us,Oe,ye,U,Te,ga,Ae,We,Le,g,Da,On=E.DDef+"",Fe,Q,Ca,rs=k[4].value.get("a")+"",js,Se,Pa,yn=E.DRead+"",Ne,W,$e,Ra,Be,qe,Ha,Ie,Ge,Ke,Oa,Tn=E.DWrite+"",Ue,J,Qe,ya,Je,ze,Ve,D,Ta,An=E.EDef+"",Xe,z,Aa,is=k[5].value.get("a")+"",Ms,Ye,Wa,Wn=E.ERead+"",Ze,L,xe,La,at,st,Fa,et,tt,nt,Sa,Ln=E.EWrite+"",ot,V,lt,Na,pt,ct,ut,$a,Fn=E.FDef+"",rt,h,X,Ba,ks=k[2].value.get("a")+"",gs,it,qa,Sn=E.FRead+"",kt,F,dt,Ia,vt,ft,Ga,ht,bt,mt,Ka,Nn=E.F1Write+"",Et,na,wt,Ua,_t,jt,Mt,Qa,$n=E.F2Write+"",gt,oa,Dt,Ja,Ct,Pt,Rt,za,Bn=E.F3Write+"",Ht,ds,Ot,yt,Va,qn=E.F4Write+"",Tt,At,Wt,Xa,vs,Ya,Lt,Ft,Nt;return{c(){c=s("main"),f=s("header"),b=s("h1"),m=s("a"),R=o("mutable"),H=r(),_=s("blockquote"),la=o("using mutable values in Svelte stores with the "),P=s("code"),S=o("immutable"),sa=o(` compiler flag \u2014
			`),A=s("a"),ea=o("learn more on GitHub"),ta=r(),O=s("button"),bs=o("click me to make number++ go up"),ms=r(),d=s("h2"),Is=o("A. "),pa=s("code"),Gs=o("writable"),Ks=o(" store (broken! D:)"),Us=r(),j=s("section"),ca=s("pre"),Qs=r(),N=s("p"),ua=s("span"),Es=o(os),Js=r(),ra=s("span"),zs=r(),$=s("p"),Vs=o("\u2191 fails to update as a "),ia=s("code"),Xs=o("writable"),Ys=o(" store because "),B=s("code"),Zs=o("immutable="),xs=o(St),ae=o("true}"),se=r(),ka=s("pre"),ee=r(),q=s("h2"),te=o("B. cloned "),da=s("code"),ne=o("writable"),oe=o(" store"),le=r(),M=s("section"),va=s("pre"),pe=r(),I=s("p"),fa=s("span"),ws=o(ls),ce=r(),ha=s("span"),ue=r(),ps=s("p"),re=o("\u2191 works, but in some cases, causes tremendous garbage and slowness"),ie=r(),ba=s("pre"),ke=r(),de=s("hr"),ve=r(),G=s("blockquote"),fe=o("in the examples below, notice that you need to access "),ma=s("code"),he=o(".value"),be=o(" for reads, unlike above"),me=r(),Ee=s("hr"),we=r(),T=s("h2"),_e=o("C. "),Ea=s("code"),je=o("derived"),Me=o(" from "),wa=s("code"),ge=o("writable"),De=o(" store"),Ce=r(),y=s("section"),_a=s("pre"),Pe=r(),K=s("p"),ja=s("span"),_s=o(cs),Re=r(),Ma=s("span"),He=r(),us=s("p"),Oe=o(`\u2191 works with no new libraries, and doesn't clone the map, but now we're juggling two stores,
			one for writes and one for reads, and it creates garbage every change`),ye=r(),U=s("h2"),Te=o("D. "),ga=s("code"),Ae=o("mutable"),We=o(" store"),Le=r(),g=s("section"),Da=s("pre"),Fe=r(),Q=s("p"),Ca=s("span"),js=o(rs),Se=r(),Pa=s("span"),Ne=r(),W=s("p"),$e=o("\u2191 works because it's a "),Ra=s("code"),Be=o("mutable"),qe=o(` store; doesn't clone the map; however notice that
			you need to access `),Ha=s("code"),Ie=o(".value"),Ge=o(" on reads"),Ke=r(),Oa=s("pre"),Ue=r(),J=s("h2"),Qe=o("E. "),ya=s("code"),Je=o("fastMutable"),ze=o(" store"),Ve=r(),D=s("section"),Ta=s("pre"),Xe=r(),z=s("p"),Aa=s("span"),Ms=o(is),Ye=r(),Wa=s("span"),Ze=r(),L=s("p"),xe=o("\u2191 works because it's a "),La=s("code"),at=o("fastMutable"),st=o(` store, which compared to
			`),Fa=s("code"),et=o("mutable"),tt=o(` is slightly more efficient because it swaps between two stable object references,
			but it doesn't compose as an immutable value stream`),nt=r(),Sa=s("pre"),ot=r(),V=s("h2"),lt=o("F. "),Na=s("code"),pt=o("mutable"),ct=o(" store with manual update and set"),ut=r(),$a=s("pre"),rt=r(),h=s("section"),X=s("p"),Ba=s("span"),gs=o(ks),it=r(),qa=s("span"),kt=r(),F=s("p"),dt=o("\u2191 works because it's a "),Ia=s("code"),vt=o("mutable"),ft=o(` store, but mutates the value directly and then
			manually calls `),Ga=s("code"),ht=o(".update()"),bt=o(", which may be an antipattern"),mt=r(),Ka=s("pre"),Et=r(),na=s("p"),wt=o("an alternative using the store's "),Ua=s("code"),_t=o("set"),jt=o(" method:"),Mt=r(),Qa=s("pre"),gt=r(),oa=s("p"),Dt=o("and you can set a new value if you need to, but if this is all you need, prefer a "),Ja=s("code"),Ct=o("writable"),Pt=o(":"),Rt=r(),za=s("pre"),Ht=r(),ds=s("p"),Ot=o("or:"),yt=r(),Va=s("pre"),Tt=r(),At=s("hr"),Wt=r(),Xa=s("footer"),vs=s("p"),Ya=s("a"),Lt=o("get the docs and public domain source code on GitHub"),this.h()},l(v){c=e(v,"MAIN",{class:!0});var u=n(c);f=e(u,"HEADER",{});var Ds=n(f);b=e(Ds,"H1",{class:!0});var $t=n(b);m=e($t,"A",{href:!0});var Bt=n(m);R=l(Bt,"mutable"),Bt.forEach(t),$t.forEach(t),H=i(Ds),_=e(Ds,"BLOCKQUOTE",{});var fs=n(_);la=l(fs,"using mutable values in Svelte stores with the "),P=e(fs,"CODE",{class:!0});var qt=n(P);S=l(qt,"immutable"),qt.forEach(t),sa=l(fs,` compiler flag \u2014
			`),A=e(fs,"A",{href:!0});var It=n(A);ea=l(It,"learn more on GitHub"),It.forEach(t),fs.forEach(t),Ds.forEach(t),ta=i(u),O=e(u,"BUTTON",{class:!0});var Gt=n(O);bs=l(Gt,"click me to make number++ go up"),Gt.forEach(t),ms=i(u),d=e(u,"H2",{class:!0});var Cs=n(d);Is=l(Cs,"A. "),pa=e(Cs,"CODE",{class:!0});var Kt=n(pa);Gs=l(Kt,"writable"),Kt.forEach(t),Ks=l(Cs," store (broken! D:)"),Cs.forEach(t),Us=i(u),j=e(u,"SECTION",{});var Y=n(j);ca=e(Y,"PRE",{class:!0});var In=n(ca);In.forEach(t),Qs=i(Y),N=e(Y,"P",{class:!0});var Ps=n(N);ua=e(Ps,"SPAN",{class:!0});var Ut=n(ua);Es=l(Ut,os),Ut.forEach(t),Js=i(Ps),ra=e(Ps,"SPAN",{class:!0});var Gn=n(ra);Gn.forEach(t),Ps.forEach(t),zs=i(Y),$=e(Y,"P",{});var hs=n($);Vs=l(hs,"\u2191 fails to update as a "),ia=e(hs,"CODE",{class:!0});var Qt=n(ia);Xs=l(Qt,"writable"),Qt.forEach(t),Ys=l(hs," store because "),B=e(hs,"CODE",{class:!0});var Rs=n(B);Zs=l(Rs,"immutable="),xs=l(Rs,St),ae=l(Rs,"true}"),Rs.forEach(t),hs.forEach(t),se=i(Y),ka=e(Y,"PRE",{class:!0});var Kn=n(ka);Kn.forEach(t),Y.forEach(t),ee=i(u),q=e(u,"H2",{class:!0});var Hs=n(q);te=l(Hs,"B. cloned "),da=e(Hs,"CODE",{class:!0});var Jt=n(da);ne=l(Jt,"writable"),Jt.forEach(t),oe=l(Hs," store"),Hs.forEach(t),le=i(u),M=e(u,"SECTION",{});var Z=n(M);va=e(Z,"PRE",{class:!0});var Un=n(va);Un.forEach(t),pe=i(Z),I=e(Z,"P",{class:!0});var Os=n(I);fa=e(Os,"SPAN",{class:!0});var zt=n(fa);ws=l(zt,ls),zt.forEach(t),ce=i(Os),ha=e(Os,"SPAN",{class:!0});var Qn=n(ha);Qn.forEach(t),Os.forEach(t),ue=i(Z),ps=e(Z,"P",{});var Vt=n(ps);re=l(Vt,"\u2191 works, but in some cases, causes tremendous garbage and slowness"),Vt.forEach(t),ie=i(Z),ba=e(Z,"PRE",{class:!0});var Jn=n(ba);Jn.forEach(t),Z.forEach(t),ke=i(u),de=e(u,"HR",{}),ve=i(u),G=e(u,"BLOCKQUOTE",{style:!0});var ys=n(G);fe=l(ys,"in the examples below, notice that you need to access "),ma=e(ys,"CODE",{class:!0});var Xt=n(ma);he=l(Xt,".value"),Xt.forEach(t),be=l(ys," for reads, unlike above"),ys.forEach(t),me=i(u),Ee=e(u,"HR",{}),we=i(u),T=e(u,"H2",{class:!0});var Za=n(T);_e=l(Za,"C. "),Ea=e(Za,"CODE",{class:!0});var Yt=n(Ea);je=l(Yt,"derived"),Yt.forEach(t),Me=l(Za," from "),wa=e(Za,"CODE",{class:!0});var Zt=n(wa);ge=l(Zt,"writable"),Zt.forEach(t),De=l(Za," store"),Za.forEach(t),Ce=i(u),y=e(u,"SECTION",{});var xa=n(y);_a=e(xa,"PRE",{class:!0});var zn=n(_a);zn.forEach(t),Pe=i(xa),K=e(xa,"P",{class:!0});var Ts=n(K);ja=e(Ts,"SPAN",{class:!0});var xt=n(ja);_s=l(xt,cs),xt.forEach(t),Re=i(Ts),Ma=e(Ts,"SPAN",{class:!0});var Vn=n(Ma);Vn.forEach(t),Ts.forEach(t),He=i(xa),us=e(xa,"P",{});var an=n(us);Oe=l(an,`\u2191 works with no new libraries, and doesn't clone the map, but now we're juggling two stores,
			one for writes and one for reads, and it creates garbage every change`),an.forEach(t),xa.forEach(t),ye=i(u),U=e(u,"H2",{class:!0});var As=n(U);Te=l(As,"D. "),ga=e(As,"CODE",{class:!0});var sn=n(ga);Ae=l(sn,"mutable"),sn.forEach(t),We=l(As," store"),As.forEach(t),Le=i(u),g=e(u,"SECTION",{});var x=n(g);Da=e(x,"PRE",{class:!0});var Xn=n(Da);Xn.forEach(t),Fe=i(x),Q=e(x,"P",{class:!0});var Ws=n(Q);Ca=e(Ws,"SPAN",{class:!0});var en=n(Ca);js=l(en,rs),en.forEach(t),Se=i(Ws),Pa=e(Ws,"SPAN",{class:!0});var Yn=n(Pa);Yn.forEach(t),Ws.forEach(t),Ne=i(x),W=e(x,"P",{});var as=n(W);$e=l(as,"\u2191 works because it's a "),Ra=e(as,"CODE",{class:!0});var tn=n(Ra);Be=l(tn,"mutable"),tn.forEach(t),qe=l(as,` store; doesn't clone the map; however notice that
			you need to access `),Ha=e(as,"CODE",{class:!0});var nn=n(Ha);Ie=l(nn,".value"),nn.forEach(t),Ge=l(as," on reads"),as.forEach(t),Ke=i(x),Oa=e(x,"PRE",{class:!0});var Zn=n(Oa);Zn.forEach(t),x.forEach(t),Ue=i(u),J=e(u,"H2",{class:!0});var Ls=n(J);Qe=l(Ls,"E. "),ya=e(Ls,"CODE",{class:!0});var on=n(ya);Je=l(on,"fastMutable"),on.forEach(t),ze=l(Ls," store"),Ls.forEach(t),Ve=i(u),D=e(u,"SECTION",{});var aa=n(D);Ta=e(aa,"PRE",{class:!0});var xn=n(Ta);xn.forEach(t),Xe=i(aa),z=e(aa,"P",{class:!0});var Fs=n(z);Aa=e(Fs,"SPAN",{class:!0});var ln=n(Aa);Ms=l(ln,is),ln.forEach(t),Ye=i(Fs),Wa=e(Fs,"SPAN",{class:!0});var ao=n(Wa);ao.forEach(t),Fs.forEach(t),Ze=i(aa),L=e(aa,"P",{});var ss=n(L);xe=l(ss,"\u2191 works because it's a "),La=e(ss,"CODE",{class:!0});var pn=n(La);at=l(pn,"fastMutable"),pn.forEach(t),st=l(ss,` store, which compared to
			`),Fa=e(ss,"CODE",{class:!0});var cn=n(Fa);et=l(cn,"mutable"),cn.forEach(t),tt=l(ss,` is slightly more efficient because it swaps between two stable object references,
			but it doesn't compose as an immutable value stream`),ss.forEach(t),nt=i(aa),Sa=e(aa,"PRE",{class:!0});var so=n(Sa);so.forEach(t),aa.forEach(t),ot=i(u),V=e(u,"H2",{class:!0});var Ss=n(V);lt=l(Ss,"F. "),Na=e(Ss,"CODE",{class:!0});var un=n(Na);pt=l(un,"mutable"),un.forEach(t),ct=l(Ss," store with manual update and set"),Ss.forEach(t),ut=i(u),$a=e(u,"PRE",{class:!0});var eo=n($a);eo.forEach(t),rt=i(u),h=e(u,"SECTION",{});var w=n(h);X=e(w,"P",{class:!0});var Ns=n(X);Ba=e(Ns,"SPAN",{class:!0});var rn=n(Ba);gs=l(rn,ks),rn.forEach(t),it=i(Ns),qa=e(Ns,"SPAN",{class:!0});var to=n(qa);to.forEach(t),Ns.forEach(t),kt=i(w),F=e(w,"P",{});var es=n(F);dt=l(es,"\u2191 works because it's a "),Ia=e(es,"CODE",{class:!0});var kn=n(Ia);vt=l(kn,"mutable"),kn.forEach(t),ft=l(es,` store, but mutates the value directly and then
			manually calls `),Ga=e(es,"CODE",{class:!0});var dn=n(Ga);ht=l(dn,".update()"),dn.forEach(t),bt=l(es,", which may be an antipattern"),es.forEach(t),mt=i(w),Ka=e(w,"PRE",{class:!0});var no=n(Ka);no.forEach(t),Et=i(w),na=e(w,"P",{});var $s=n(na);wt=l($s,"an alternative using the store's "),Ua=e($s,"CODE",{class:!0});var vn=n(Ua);_t=l(vn,"set"),vn.forEach(t),jt=l($s," method:"),$s.forEach(t),Mt=i(w),Qa=e(w,"PRE",{class:!0});var oo=n(Qa);oo.forEach(t),gt=i(w),oa=e(w,"P",{});var Bs=n(oa);Dt=l(Bs,"and you can set a new value if you need to, but if this is all you need, prefer a "),Ja=e(Bs,"CODE",{class:!0});var fn=n(Ja);Ct=l(fn,"writable"),fn.forEach(t),Pt=l(Bs,":"),Bs.forEach(t),Rt=i(w),za=e(w,"PRE",{class:!0});var lo=n(za);lo.forEach(t),Ht=i(w),ds=e(w,"P",{});var hn=n(ds);Ot=l(hn,"or:"),hn.forEach(t),yt=i(w),Va=e(w,"PRE",{class:!0});var po=n(Va);po.forEach(t),w.forEach(t),Tt=i(u),At=e(u,"HR",{}),Wt=i(u),Xa=e(u,"FOOTER",{class:!0});var bn=n(Xa);vs=e(bn,"P",{});var mn=n(vs);Ya=e(mn,"A",{href:!0});var En=n(Ya);Lt=l(En,"get the docs and public domain source code on GitHub"),En.forEach(t),mn.forEach(t),bn.forEach(t),u.forEach(t),this.h()},h(){p(m,"href","https://github.com/spiderspace/mutable"),p(b,"class","svelte-te0jj8"),p(P,"class","svelte-te0jj8"),p(A,"href","https://github.com/spiderspace/mutable"),p(O,"class","svelte-te0jj8"),p(pa,"class","svelte-te0jj8"),p(d,"class","svelte-te0jj8"),p(ca,"class","panel-inset svelte-te0jj8"),p(ua,"class","count svelte-te0jj8"),p(ra,"class","read-example panel-inset svelte-te0jj8"),p(N,"class","count-wrapper svelte-te0jj8"),p(ia,"class","svelte-te0jj8"),p(B,"class","svelte-te0jj8"),p(ka,"class","panel-inset svelte-te0jj8"),C(j,"--hue",k[12](k[0].get("a")),!1),p(da,"class","svelte-te0jj8"),p(q,"class","svelte-te0jj8"),p(va,"class","panel-inset svelte-te0jj8"),p(fa,"class","count svelte-te0jj8"),p(ha,"class","read-example panel-inset svelte-te0jj8"),p(I,"class","count-wrapper svelte-te0jj8"),p(ba,"class","panel-inset svelte-te0jj8"),C(M,"--hue",k[12](k[1].get("a")),!1),p(ma,"class","svelte-te0jj8"),C(G,"margin-bottom","0"),p(Ea,"class","svelte-te0jj8"),p(wa,"class","svelte-te0jj8"),p(T,"class","svelte-te0jj8"),p(_a,"class","panel-inset svelte-te0jj8"),p(ja,"class","count svelte-te0jj8"),p(Ma,"class","read-example panel-inset svelte-te0jj8"),p(K,"class","count-wrapper svelte-te0jj8"),C(y,"--hue",k[12](k[3].value.get("a")),!1),p(ga,"class","svelte-te0jj8"),p(U,"class","svelte-te0jj8"),p(Da,"class","panel-inset svelte-te0jj8"),p(Ca,"class","count svelte-te0jj8"),p(Pa,"class","read-example panel-inset svelte-te0jj8"),p(Q,"class","count-wrapper svelte-te0jj8"),p(Ra,"class","svelte-te0jj8"),p(Ha,"class","svelte-te0jj8"),p(Oa,"class","panel-inset svelte-te0jj8"),C(g,"--hue",k[12](k[4].value.get("a")),!1),p(ya,"class","svelte-te0jj8"),p(J,"class","svelte-te0jj8"),p(Ta,"class","panel-inset svelte-te0jj8"),p(Aa,"class","count svelte-te0jj8"),p(Wa,"class","read-example panel-inset svelte-te0jj8"),p(z,"class","count-wrapper svelte-te0jj8"),p(La,"class","svelte-te0jj8"),p(Fa,"class","svelte-te0jj8"),p(Sa,"class","panel-inset svelte-te0jj8"),C(D,"--hue",k[12](k[5].value.get("a")),!1),p(Na,"class","svelte-te0jj8"),p(V,"class","svelte-te0jj8"),p($a,"class","panel-inset svelte-te0jj8"),p(Ba,"class","count svelte-te0jj8"),p(qa,"class","read-example panel-inset svelte-te0jj8"),p(X,"class","count-wrapper svelte-te0jj8"),p(Ia,"class","svelte-te0jj8"),p(Ga,"class","svelte-te0jj8"),p(Ka,"class","panel-inset svelte-te0jj8"),p(Ua,"class","svelte-te0jj8"),p(Qa,"class","panel-inset svelte-te0jj8"),p(Ja,"class","svelte-te0jj8"),p(za,"class","panel-inset svelte-te0jj8"),p(Va,"class","panel-inset svelte-te0jj8"),C(h,"--hue",k[12](k[2].value.get("a")),!1),p(Ya,"href","https://github.com/spiderspace/mutable"),p(Xa,"class","svelte-te0jj8"),p(c,"class","markup column svelte-te0jj8")},m(v,u){io(v,c,u),a(c,f),a(f,b),a(b,m),a(m,R),a(f,H),a(f,_),a(_,la),a(_,P),a(P,S),a(_,sa),a(_,A),a(A,ea),a(c,ta),a(c,O),a(O,bs),a(c,ms),a(c,d),a(d,Is),a(d,pa),a(pa,Gs),a(d,Ks),a(c,Us),a(c,j),a(j,ca),ca.innerHTML=jn,a(j,Qs),a(j,N),a(N,ua),a(ua,Es),a(N,Js),a(N,ra),ra.innerHTML=Mn,a(j,zs),a(j,$),a($,Vs),a($,ia),a(ia,Xs),a($,Ys),a($,B),a(B,Zs),a(B,xs),a(B,ae),a(j,se),a(j,ka),ka.innerHTML=gn,a(c,ee),a(c,q),a(q,te),a(q,da),a(da,ne),a(q,oe),a(c,le),a(c,M),a(M,va),va.innerHTML=Dn,a(M,pe),a(M,I),a(I,fa),a(fa,ws),a(I,ce),a(I,ha),ha.innerHTML=Cn,a(M,ue),a(M,ps),a(ps,re),a(M,ie),a(M,ba),ba.innerHTML=Pn,a(c,ke),a(c,de),a(c,ve),a(c,G),a(G,fe),a(G,ma),a(ma,he),a(G,be),a(c,me),a(c,Ee),a(c,we),a(c,T),a(T,_e),a(T,Ea),a(Ea,je),a(T,Me),a(T,wa),a(wa,ge),a(T,De),a(c,Ce),a(c,y),a(y,_a),_a.innerHTML=Rn,a(y,Pe),a(y,K),a(K,ja),a(ja,_s),a(K,Re),a(K,Ma),Ma.innerHTML=Hn,a(y,He),a(y,us),a(us,Oe),a(c,ye),a(c,U),a(U,Te),a(U,ga),a(ga,Ae),a(U,We),a(c,Le),a(c,g),a(g,Da),Da.innerHTML=On,a(g,Fe),a(g,Q),a(Q,Ca),a(Ca,js),a(Q,Se),a(Q,Pa),Pa.innerHTML=yn,a(g,Ne),a(g,W),a(W,$e),a(W,Ra),a(Ra,Be),a(W,qe),a(W,Ha),a(Ha,Ie),a(W,Ge),a(g,Ke),a(g,Oa),Oa.innerHTML=Tn,a(c,Ue),a(c,J),a(J,Qe),a(J,ya),a(ya,Je),a(J,ze),a(c,Ve),a(c,D),a(D,Ta),Ta.innerHTML=An,a(D,Xe),a(D,z),a(z,Aa),a(Aa,Ms),a(z,Ye),a(z,Wa),Wa.innerHTML=Wn,a(D,Ze),a(D,L),a(L,xe),a(L,La),a(La,at),a(L,st),a(L,Fa),a(Fa,et),a(L,tt),a(D,nt),a(D,Sa),Sa.innerHTML=Ln,a(c,ot),a(c,V),a(V,lt),a(V,Na),a(Na,pt),a(V,ct),a(c,ut),a(c,$a),$a.innerHTML=Fn,a(c,rt),a(c,h),a(h,X),a(X,Ba),a(Ba,gs),a(X,it),a(X,qa),qa.innerHTML=Sn,a(h,kt),a(h,F),a(F,dt),a(F,Ia),a(Ia,vt),a(F,ft),a(F,Ga),a(Ga,ht),a(F,bt),a(h,mt),a(h,Ka),Ka.innerHTML=Nn,a(h,Et),a(h,na),a(na,wt),a(na,Ua),a(Ua,_t),a(na,jt),a(h,Mt),a(h,Qa),Qa.innerHTML=$n,a(h,gt),a(h,oa),a(oa,Dt),a(oa,Ja),a(Ja,Ct),a(oa,Pt),a(h,Rt),a(h,za),za.innerHTML=Bn,a(h,Ht),a(h,ds),a(ds,Ot),a(h,yt),a(h,Va),Va.innerHTML=qn,a(c,Tt),a(c,At),a(c,Wt),a(c,Xa),a(Xa,vs),a(vs,Ya),a(Ya,Lt),Ft||(Nt=ko(O,"click",k[13]),Ft=!0)},p(v,[u]){u&1&&os!==(os=v[0].get("a")+"")&&ts(Es,os),u&1&&C(j,"--hue",v[12](v[0].get("a")),!1),u&2&&ls!==(ls=v[1].get("a")+"")&&ts(ws,ls),u&2&&C(M,"--hue",v[12](v[1].get("a")),!1),u&8&&cs!==(cs=v[3].value.get("a")+"")&&ts(_s,cs),u&8&&C(y,"--hue",v[12](v[3].value.get("a")),!1),u&16&&rs!==(rs=v[4].value.get("a")+"")&&ts(js,rs),u&16&&C(g,"--hue",v[12](v[4].value.get("a")),!1),u&32&&is!==(is=v[5].value.get("a")+"")&&ts(Ms,is),u&32&&C(D,"--hue",v[12](v[5].value.get("a")),!1),u&4&&ks!==(ks=v[2].value.get("a")+"")&&ts(gs,ks),u&4&&C(h,"--hue",v[12](v[2].value.get("a")),!1)},i:wn,o:wn,d(v){v&&t(c),Ft=!1,Nt()}}}function No(k,c,f){let b,m,R,H,_,la;const P=[["a",1]],S=qs(new Map(P));ns(k,S,d=>f(0,b=d));const sa=qs(new Map(P));ns(k,sa,d=>f(1,m=d));const A=vo(S,d=>({value:d}));ns(k,A,d=>f(3,H=d));const ea=_n(new Map(P));ns(k,ea,d=>f(4,_=d));const ta=ho(new Map(P));ns(k,ta,d=>f(5,la=d));const O=_n(new Map(P));return ns(k,O,d=>f(2,R=d)),[b,m,R,H,_,la,S,sa,A,ea,ta,O,d=>d*37+"",()=>{b.set("a",b.get("a")+1),S.set(b),m.set("a",m.get("a")+1),fo(sa,m=new Map(m),m),ea.update(d=>{d.set("a",d.get("a")+1)}),ta.update(d=>{d.set("a",d.get("a")+1)}),R.value.set("a",R.value.get("a")+1),O.update()}]}class Bo extends co{constructor(c){super();uo(this,c,No,So,ro,{})}}export{Bo as default};
